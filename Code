import time
import praw
import random
import re

r = praw.Reddit('RainDogeBot')
r.login("DogeRain","")
already_done = set()
prawWords = ['a', 'e', 'i', 'o', 'u' , 'y' ]
prawTerms = ['+/u/dogetipbot']
tip_amount_pattern = re.compile("D?(\d+) ?(?:)|doge)?", re.IGNORECASE)

amount_min = 20
amount_max = 40
average_tip = float(amount_min + amount_max) / 2


def rand_amount(minimum, maximum):
    return random.randint(minimum, maximum)

def pick_random_comment():
    global amount_min
    global amount_max
    
    subreddit = r.get_subreddit('dogecoin')
    subreddit_comments = subreddit.get_comments(limit=200)
    for comment in subreddit_comments:
        op_text = comment.body
        has_praw = any(string in op_text for string in prawWords)
        if comment.id not in already_done and has_praw:
            comment.reply('This is a Doge Rain! +/u/dogetipbot ' + str(rand_amount(amount_min, amount_max)) + ' doge\n\nTip this bot for more rains in future!! \n\n
            already_done.add(comment.id)
            break

def check_inbox():
    messages = r.get_unread('comments')
    for message in messages:
        op_text = message.body
        has_praw = any(string in op_text for string in prawTerms)
        if message.id not in already_done and has_praw:
            amount_matches = tip_amount_pattern.findall(op_text)
            if amount_matches: # found a specified amount in the comment
                tip_allows_hours = float(amount_matches[0]) / average_tip
                message.reply('Thanks Shibe! This will help me keep raining for {num_hours} hours!\n\n .format(num_hours = tip_allows_hours))
            else:
                message.reply('Thank you! This will help to keep raining Doge!!\n\n
            already_done.add(message.id)
            break



while True:
    check_inbox()
    pick_random_comment()
    time.sleep(3600)
